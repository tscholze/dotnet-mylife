@using MyLife.Core.Models;
@using MyLife.Core.Models.CV
@using MyLife.Blazor.Wasm.Extensions

<style>
    .cv-section-title {
        font-size: 1.1rem;
        margin-bottom: 0px;
    }

    .cv-section-item {
        margin-top: 4px;
        list-style-type: '- ';
    }
</style>

<h2>Curricilum Vitae</h2>

<h3>Experiences</h3>
@foreach (var item in Data.RecentEmployments)
{
    <CVSubSection RawTitle="@GetRawTitleForEmployment(item)" RawItems="@item.Tasks" />
}

<h3>Education</h3>
@foreach (var item in Data.Educations)
{
    <CVSubSection RawTitle="@GetRawTitleForEducation(item)" RawItems="@item.Content" />
}

<h3>Skills</h3>
<CVSubSection RawTitle="Software development" RawItems="@GetDevelopmentItems(Data.Skillset)" />
<CVSubSection RawTitle="Design process" RawItems="@GetDesignItems(Data.Skillset)" />
<CVSubSection RawTitle="Soft skills" RawItems="Data.Skillset.SoftSkills" />
<CVSubSection RawTitle="Sparetime activities" RawItems="Data.Activities" />
<CVSubSection RawTitle="Other interests" RawItems="Data.OtherInterests" />

@code {
    [Parameter]
    public MyLife.Core.Models.CV.CurriculumVitae Data { get; set; }

    private string GetRawTitleForEmployment(Employment employment)
    {
        string range;
        var joined = employment.GetOnlyYearJoined();
        var left = employment.GetOnlyYearLeft();

        if (left == null)
        {
            range = $"{joined} - today";
        }
        else if (left == joined)
        {
            range = $"{joined}";
        }
        else
        {
            range = $"{joined} - {left}";
        }

        return $"{employment.Role} <small>| {employment.Company} | {range}</small>";
    }

    public string GetRawTitleForEducation(Education education)
    {
        return $"{education.Graduation} | {education.Instituation} | {education.YearOfGraduation}";
    }

    public string[] GetDevelopmentItems(Skillset skillset)
    {
        return [
            $"<strong>Environments:</strong>  {string.Join(", ", skillset.DevelopmentEnvironments)}",
        $"<strong>Languages:</strong>  {string.Join(", ", skillset.ProgrammingLanguages)}",
    ];
    }

    public string[] GetDesignItems(Skillset skillset)
    {
        return [
            $"<strong>Environments:</strong>  {string.Join(", ", skillset.DesignEnvironments)}",
    $"<strong>Guidelines:</strong>  {string.Join(", ", skillset.DesignGuidelines)}",
    ];
    }
}
